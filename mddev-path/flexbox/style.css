body {
  background: rgb(208, 227, 240);
}

/* Overflow */
.container {
  width: 100px;
  height: 100px;
  background: white;
  padding: 10px;
  box-sizing: border-box;
  font-size: 32px;
  overflow: auto; /* auto; Is the best way use "auto" because when you use scroll for example the browser force the  scroll bars to appear, it doesn't matter if there is overflow or not. That isn't so pro! */
}

/* Position */
.section2 {
  border: 5px solid #000;
  width: 250px;
  height: 250px;
  box-sizing: border-box;
  position: relative;
}

.container2 {
  background: #09f;
  width: 100px;
  height: 100px;
  position: sticky;
  /* top: 0;
  right: 0;
  bottom: 0;
  left: 0; */
  inset: 0;
  margin: auto;
  z-index: 10;
}

/* z-index */
.div1 {
  border: 1px solid;
  opacity: 0.9;
  width: 200px;
  height: 200px;
  margin-top: -100px;
  box-shadow: 0 0 5px #000000dd;
  position: relative;
  box-sizing: border-box;
}

.div1:first-child {
  background: yellow;
  z-index: 3;
}

.div1:nth-child(2) {
  background: #09f;
  z-index: 2;
}

.div1:last-child {
  background: red;
  z-index: 1;
}

/* Flexbox */
.section4 {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  /* flex-flow: row nowrap; */
  /* direction: rtl; */ 
  border: 4px solid #000;
  box-sizing: border-box;
  width: 250px;
  height: 200px;
  justify-content: center;
  align-items: center; /* center only the axis. For the cross axis*/
  /* align-content: flex-start; center all the content. Specially when there are more than one row */
  gap: 16px; /* separation between elements */
}

.div2 {
  border: 1px solid;
  opacity: 0.9;
  height: 50px;
  width: 50px;
  box-sizing: border-box;
  display: flex;

  /* default values */
  /* flex-grow: 0; the elements do not grow */
  /* flex-shrink: 1; the elements could reduce its size to a smaller sizet than its flex-basis */
  /* flex-basis: auto; the elements have auto base size */
  /* flex: initial; default compact way values for flex-grow, flex-shrink, and flex-basis */

  /* flex: auto -> detail 👇🏼 */
  /* flex-grow: 1; */
  /* flex-shrink: 1; */
  /* flex-basis: auto; */

  /* flex: 1 -> detail 👇🏼 */
  /* flex-grow: 1; */
  /* flex-shrink: 1 */
  /* flex-basis: 0; all elemets have the same size and are not content-dependent */
}

.div2:first-child {
  background: yellow;
  /* flex: 2; It's a relative reference of how much space they should take, with respect to the parent. In this case this element take twice as much space as the other elements */
  /* order: 2; works like the z-index and is only for visual sorting */
  height: 20px;
}

.div2:nth-child(2),
.div2:nth-child(5) {
  background: #09f;
  height: 30px;
  align-self: flex-start; /* align only this element */
}

.div2:last-child {
  background: red;
  height: 40px;
}
